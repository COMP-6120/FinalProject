1. Show the subject names of books supplied by *supplier2*.
> SELECT CategoryName FROM subject WHERE SubjectID IN (SELECT SubjectID FROM book WHERE SupplierID in (SELECT SupplierID FROM supplier WHERE CompanyName='supplier2'));
> Output:
| 1 | category1 |
| 2 | category2 |

2. Show the name and price of the most expensive book supplied by
     *supplier3*.
> SET @p := (SELECT MAX(UnitPrice) FROM book WHERE supplierID = (SELECT SupplierID FROM supplier WHERE CompanyName = "supplier3"));
SELECT Title, UnitPrice FROM book WHERE UnitPrice = @p;
> Output:
| 1 | book7 | 56.90 |

3. Show the unique names of all books ordered by *lastname1
     firstname1*.
> SELECT Title FROM book WHERE BookID IN (SELECT BookID FROM order_detail WHERE OrderID IN (SELECT OrderID FROM orders WHERE CustomerID = (SELECT CustomerID FROM customer WHERE FirstName = "firstname1" AND LastName = "lastname1")));
> Output:
| 1 | book1 |
| 2 | book4 |
| 3 | book6 |
| 4 | book7 |

4. Show the title of books which have more than 10 units in stock.
> SELECT Title FROM book WHERE Quantity > 10;
> Output:
| 1 | book4 |
| 1 | book6 |
| 1 | book7 |

5. Show the total price *lastname1 firstname1* has paid for the books.
> SELECT SUM(OD.Quantity * B.UnitPrice) FROM book B, order_detail OD, orders O, customer C, WHERE OD.BookID = B.BookID AND O.OrderID = OD.OrderID AND C.CustomerID = O.CustomerID AND C.FirstName = "firstname1" AND C.LastName = "lastname1";

> Output:
| 1 | 266.96 | 




6. Show the names of the customers who have paid less than $80 in
     totals.
 > SELECT FirstName, LastName FROM (SELECT C.FirstName, C.LastName FROM book B, order_detail OD, orders O, customer C WHERE OD.BookID = B.BookID AND O.OrderID = OD.OrderID AND C.CustomerID = O.CustomerID GROUP BY C.CustomerID HAVING SUM(OD.Quantity * B.UnitPrice) < 80) AS TEMPORARY;

 > Output: 
 | 1 | firstname2 | lastname2 |
 | 2 | firstname3 | lastname3 | 

7. Show the name of books supplied by *supplier2*.
> SELECT Title FROM book WHERE SupplierID = (SELECT SupplierID FROM supplier WHERE CompanyName = 'supplier2');
> Output:
| 1 | book3 |
| 2 | book5 |

8. Show the total price each customer paid and their names.  List the
     result in descending price.


9. Show the names of all the books shipped on 08/04/2016 and their
     shippers' names.
> INCOMPLETE: SELECT DISTINCT b.Title, s.ShipperName FROM book AS b, shipper AS s WHERE b.BookID IN (SELECT BookID FROM order_detail WHERE OrderID IN (SELECT OrderID FROM orders WHERE OrderDate="8/4/2016"));

10. Show the unique names of all the books *lastname1 firstname1* and
     *lastname4 firstname4* *both* ordered.


11. Show the names of all the books *lastname6 firstname6* was
     responsible for.
> INCOMPLETE: SELECT Title FROM book WHERE BookID IN (SELECT BookID FROM order_detail WHERE OrderID IN (SELECT OrderID FROM orders WHERE EmployeeID = (SELECT EmployeeID FROM employee WHERE FirstName = 'firstname6' AND LastName = 'lastname6')));
> Output: [returns nothing currently, may need more work]

12. Show the names of all the ordered books and their total
     quantities.  List the result in ascending quantity.


13. Show the names of the customers who ordered at least 2 books.


14. Show the name of the customers who have ordered at least a book in
     *category3* or *category4* and the book names.


15. Show the name of the customer who has ordered at least one book
     written by *author1*.


16. Show the name and total sale (price of orders) of each employee.


17. Show the book names and their respective quantities for open
     orders (the orders which have not been shipped) at midnight
     08/04/2016.


18. Show the names of customers who have ordered more than 1 book and
     the corresponding quantities.  List the result in the descending
     quantity.


19. Show the names of customers who have ordered more than 3 books and
     their respective telephone numbers.

